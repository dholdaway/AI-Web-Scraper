Title: 356377 – limit parallel for pygtk doc generation
URL: https://bugs.gentoo.org/show_bug.cgi?id=356377

Go to: 
		Gentoo Home
Documentation
Forums
Lists
Bugs
Planet
Store
Wiki
Get Gentoo!





Gentoo's Bugzilla – Bug 356377
limit parallel for pygtk doc generation
Last modified: 2011-02-28 15:34:12 UTC node [vulture]


Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]













Bug 356377 
      - limit parallel for pygtk doc generation


Summary:
limit parallel for pygtk doc generation
    








Status:
    

RESOLVED
          WORKSFORME
      






Alias:


        None
    





Product:

Gentoo Linux




Classification:

Unclassified




Component:

Current packages

  (show other bugs)



Hardware:

All
        Linux
      







Importance:
      
High
       enhancement
      


Assignee:

Gentoo Linux bug wranglers








URL:







Whiteboard:




Keywords:








Depends on:







Blocks:









 





      Reported:
    
2011-02-25 05:38 UTC by David Flogeras





      Modified:
    
2011-02-28 15:34 UTC
      (History)
    




          CC List:
        

2 
          users
          
            (show)
          



jer
jmbsvicetto









See Also:






Package list:







Runtime testing required:

---























      Attachments
    



Add an attachment
        (proposed patch, testcase, etc.)
    








Note
              You need to
              log in
              before you can comment on or make changes to this bug.
            

















Description


David Flogeras





          2011-02-25 05:38:27 UTC
        

On a machine that I use distcc to help with compiling, I often use -j15.  However, this gets quite hairy when building pygtk with USE=doc, as 15 xsltproc processes or the like eats a LOT of resources and make the machine come to its knees.

Is it possible to limit the documentation generation to a single thread?  I realize this limits people who are using sane values like -j3, another option would be to cap it at a sane value like 3 (totally arbitrary... feel free to close this if it's ridiculous).

Reproducible: Always




Comment 1


Jorge Manuel B. S. Vicetto (RETIRED)






          2011-02-25 17:16:50 UTC
        

Have you tried setting MAKEOPTS="-j15 -l<arbitrary number>" to limit the load?




Comment 2


Jeroen Roovers (RETIRED)






          2011-02-28 15:34:12 UTC
        

This might help:

$ cat /etc/portage/env/dev-python/pygtk
MAKEOPTS="-j1"

Generally MAKEOPTS should reflect both the number of processors and the memory each subprocess will use. So let's say you have eight cores and only 3 GB memory, then having large C++ programs being preprocessed (with each cc1plus using more than half a gigabyte of RAM) could get the build killed. You'll have to find a balance or install more RAM. It's certainly not something that should be fixed in pygtk alone.









Format For Printing
 - XML
 - Clone This Bug
 - Clone In The Same 
                        Product
 - Top of page 







Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]

