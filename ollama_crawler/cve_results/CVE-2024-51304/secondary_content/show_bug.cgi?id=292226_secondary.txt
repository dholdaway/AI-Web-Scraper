Title: 292226 – app-admin/conky-1.7.2-r2 + lua-cairo: missing cairo bindings for lua scripts?
URL: https://bugs.gentoo.org/show_bug.cgi?id=292226

Go to: 
		Gentoo Home
Documentation
Forums
Lists
Bugs
Planet
Store
Wiki
Get Gentoo!





Gentoo's Bugzilla – Bug 292226
app-admin/conky-1.7.2-r2 + lua-cairo: missing cairo bindings for lua scripts?
Last modified: 2009-11-30 15:00:54 UTC node [vulture]


Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]













Bug 292226 
      - app-admin/conky-1.7.2-r2 + lua-cairo: missing cairo bindings for lua scripts?


Summary:
app-admin/conky-1.7.2-r2 + lua-cairo: missing cairo bindings for lua scripts?
    








Status:
    

RESOLVED
          WORKSFORME
      






Alias:


        None
    





Product:

Gentoo Linux




Classification:

Unclassified




Component:

Current packages

  (show other bugs)



Hardware:

All
        Linux
      







Importance:
      
High
       normal
      


Assignee:

Daniel Pielmeier








URL:







Whiteboard:




Keywords:








Depends on:







Blocks:









 





      Reported:
    
2009-11-07 09:06 UTC by Andreas Zins





      Modified:
    
2009-11-30 15:00 UTC
      (History)
    




          CC List:
        

3 
          users
          
            (show)
          



brenden
dragonheart
omp









See Also:






Package list:







Runtime testing required:

---























      Attachments
    




output of pkg-config --debug lua

              (debug,1.72 KB,
                text/plain)

            
2009-11-10 19:55 UTC,

            Daniel Pielmeier




Details





View All

Add an attachment
        (proposed patch, testcase, etc.)
    








Note
              You need to
              log in
              before you can comment on or make changes to this bug.
            

















Description


Andreas Zins





          2009-11-07 09:06:29 UTC
        

This report is related to forum thread: http://forums.gentoo.org/viewtopic-t-801075.html

If I try to create a Cairo surface in a lua script I get an error message: Conky: llua_do_call: function conky_cairo_test execution failed: /home/users/mad/cairo_test.lua:22: attempt to call global 'cairo_xlib_surface_create' (a nil value) 


Reproducible: Always

Steps to Reproduce:
1. rebuilt conky with lua-cairo enabled. 

2. create a simple lua script: 
require 'cairo'
do
   function conky_cairo_test()
      local cs = cairo_xlib_surface_create(conky_window.display, conky_window.drawable, conky_window.display, conky_window.width, conky_window.height)
   end
end 

3. create a basic conkrc:
lua_load ~/cairo_test.lua
lua_draw_hook_pre cairo_test
TEXT
$nodename $sysname $kernel on $machine

4. run conky

Actual Results:  
conky runs but the lua script fails and conky returns the error message mentioned above.

Expected Results:  
lua script can handle cairo calls

$ emerge --info
Portage 2.1.7.3 (default/linux/amd64/10.0/desktop, gcc-4.3.4, glibc-2.9_p20081201-r2, 2.6.24-gentoo-r8 x86_64)
=================================================================
System uname: Linux-2.6.24-gentoo-r8-x86_64-Intel-R-_Core-TM-2_Quad_CPU_Q9300_@_2.50GHz-with-gentoo-1.12.13
Timestamp of tree: Thu, 05 Nov 2009 16:45:01 +0000
distcc 3.1 x86_64-pc-linux-gnu [disabled]
ccache version 2.4 [enabled]
app-shells/bash:     4.0_p28
dev-java/java-config: 1.3.7-r1, 2.1.9-r1
dev-lang/python:     2.4.4-r13, 2.5.4-r2, 2.6.2-r1
dev-python/pycrypto: 2.0.1-r6
dev-util/ccache:     2.4-r7
dev-util/cmake:      2.6.4
sys-apps/baselayout: 1.12.13
sys-apps/sandbox:    1.6-r2
sys-devel/autoconf:  2.13, 2.63-r1
sys-devel/automake:  1.5, 1.7.9-r1, 1.8.5-r3, 1.9.6-r2, 1.10.2
sys-devel/binutils:  2.18-r3
sys-devel/gcc-config: 1.4.1
sys-devel/libtool:   2.2.6a
virtual/os-headers:  2.6.27-r2
ACCEPT_KEYWORDS="amd64"
CBUILD="x86_64-pc-linux-gnu"
CFLAGS="-march=nocona -O2 -pipe"
CHOST="x86_64-pc-linux-gnu"
CONFIG_PROTECT="/etc"
CONFIG_PROTECT_MASK="/etc/ca-certificates.conf /etc/env.d /etc/env.d/java/ /etc/fonts/fonts.conf /etc/gconf /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo /etc/udev/rules.d"
CXXFLAGS="-march=nocona -O2 -pipe"
DISTDIR="/usr/portage/distfiles"
FEATURES="assume-digests autoaddcvs ccache distlocks fixpackages news parallel-fetch protect-owned sandbox sfperms strict unmerge-logs unmerge-orphans userfetch"
GENTOO_MIRRORS="ftp://linux.rz.ruhr-uni-bochum.de/gentoo-mirror                 ftp://ftp-stud.fht-esslingen.de/pub/Mirrors/gentoo/                 http://de-mirror.org/distro/gentoo/                 ftp://213.186.33.37/gentoo-distfiles/"
LANG="C"
LDFLAGS="-Wl,-O1"
MAKEOPTS="-j9"
PKGDIR="/usr/portage/packages"
PORTAGE_CONFIGROOT="/"
PORTAGE_RSYNC_OPTS="--recursive --links --safe-links --perms --times --compress --force --whole-file --delete --stats --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages"
PORTAGE_TMPDIR="/var/tmp"
PORTDIR="/usr/portage"
PORTDIR_OVERLAY="/usr/local/overlays"
SYNC="rsync://swamp/gentoo-portage"
USE="X a52 aac acl acpi alsa amd64 archive avahi bash-completion berkdb bluetooth branding bzip2 cairo cdr cli consolekit cracklib crypt cups custom-optimization dbus dlloader dns dri dts dvd dvdr eds emboss encode evo fam fbcon ffmpeg firefox flac fontconfig fortran fuse gdbm gif glitz gnome gnome-keyring gnutls gpm graphviz gs gstreamer gtk gtk+ gtk2 h323 hal iconv java jbig jpeg jpeg2k ldap libffi libnotify libsamplerate libsexy lua mad matroska mikmod mmx mmxext modules mp3 mp4 mpeg mudflap multilib nautilus ncurses networkmanager nls nptl nptlonly nsplugin nss ntp nvidia ogg opengl openmp pam pcmcia pcre pdf perl png pnp postgres ppds pppd pulseaudio python qt3support qt4 quicktime readline reflection samba sdl session sip spell spl sse sse2 ssl ssse3 startup-notification svg sysfs tcpd tetex theora threads thunar tiff truetype unicode usb vchroot vorbis wav webkit wifi x264 xml xorg xulrunner xv xvid zlib" ALSA_CARDS="hda-intel usb-audio" ALSA_PCM_PLUGINS="adpcm alaw asym copy dmix dshare dsnoop empty extplug file hooks iec958 ioplug ladspa lfloat linear meter mmap_emul mulaw multi null plug rate route share shm softvol" APACHE2_MODULES="actions alias auth_basic authn_alias authn_anon authn_dbm authn_default authn_file authz_dbm authz_default authz_groupfile authz_host authz_owner authz_user autoindex cache dav dav_fs dav_lock deflate dir disk_cache env expires ext_filter file_cache filter headers include info log_config logio mem_cache mime mime_magic negotiation rewrite setenvif speling status unique_id userdir usertrack vhost_alias" ELIBC="glibc" INPUT_DEVICES="keyboard mouse ps2mouse evdev" KERNEL="linux" LCD_DEVICES="bayrad cfontz cfontz633 glk hd44780 lb216 lcdm001 mtxorb ncurses text" USERLAND="GNU" VIDEO_CARDS="nv nvidia vesa" 
Unset:  CPPFLAGS, CTARGET, EMERGE_DEFAULT_OPTS, FFLAGS, INSTALL_MASK, LC_ALL, LINGUAS, PORTAGE_COMPRESS, PORTAGE_COMPRESS_FLAGS, PORTAGE_RSYNC_EXTRA_OPTS




Comment 1


Daniel Pielmeier






          2009-11-07 09:45:08 UTC
        

I can reproduce this issue. I think this is nothing caused by the ebuild, but i might be wrong.

@brenden: Do you have a clue?




Comment 2


Brenden Matthews





          2009-11-07 16:47:45 UTC
        

Hmm, not sure what's going on here.  For starters, run the lua interpreter and try this:

Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
> package.cpath = package.cpath .. ';/usr/lib/conky/lib?.so'
> require 'cairo'
> 

You can then try calling any of the cairo api functions and see if it still behaves naughty.  If it doesn't work at that point, then something is probably wrong or missing in /usr/lib/conky/.




Comment 3


Andreas Zins





          2009-11-07 17:59:40 UTC
        

Well, behavior is the same in the interpreter:
Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
> package.cpath = package.cpath .. ';/usr/lib/conky/lib?.so'
> require 'cairo'
> cairo_xlib_surface_get_width(nil)
stdin:1: attempt to call global 'cairo_xlib_surface_get_width' (a nil value)
stack traceback:
        stdin:1: in main chunk
        [C]: ?

Just for testing I also tried the Imlib2 binding. But that seems OK. 

My conky lib dir looks like this:
$ ls -l /usr/lib/conky/
total 524
-rw-r--r-- 1 root root 166324 Oct 25 13:07 libcairo.a
-rwxr-xr-x 1 root root   1329 Oct 25 13:07 libcairo.la
lrwxrwxrwx 1 root root     17 Oct 25 13:07 libcairo.so -> libcairo.so.0.0.0
lrwxrwxrwx 1 root root     17 Oct 25 13:07 libcairo.so.0 -> libcairo.so.0.0.0
-rwxr-xr-x 1 root root 137420 Oct 25 13:07 libcairo.so.0.0.0
-rw-r--r-- 1 root root 117716 Oct 25 13:07 libimlib2.a
-rwxr-xr-x 1 root root   1141 Oct 25 13:07 libimlib2.la
lrwxrwxrwx 1 root root     18 Oct 25 13:07 libimlib2.so -> libimlib2.so.0.0.0
lrwxrwxrwx 1 root root     18 Oct 25 13:07 libimlib2.so.0 -> libimlib2.so.0.0.0
-rwxr-xr-x 1 root root 100404 Oct 25 13:07 libimlib2.so.0.0.0

So the cairo lib is there... 





Comment 4


Daniel Pielmeier






          2009-11-07 18:57:35 UTC
        

(In reply to comment #3)
> Well, behavior is the same in the interpreter:
> Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
> > package.cpath = package.cpath .. ';/usr/lib/conky/lib?.so'
> > require 'cairo'
> > cairo_xlib_surface_get_width(nil)
> stdin:1: attempt to call global 'cairo_xlib_surface_get_width' (a nil value)
> stack traceback:
>         stdin:1: in main chunk
>         [C]: ?
> 

If I run the above commands within he lua interpreter I get a segmentation fault.




Comment 5


Brenden Matthews





          2009-11-07 21:55:57 UTC
        

(In reply to comment #4)
> 
> If I run the above commands within he lua interpreter I get a segmentation
> fault.
> 

I would expect as much, if you did the same in C program it'd probably blow up as well.  You should not, however, be getting that attempted to call a nil value error.  That means that the functions aren't being exported as far as Lua is concerned for some reason.  Have you got the right version of tolua++ and everything?

Also, take a look here for an example of how to draw with Lua properly: http://wiki.conky.be/index.php/Lua_Cario_bindings




Comment 6


Daniel Pielmeier






          2009-11-07 22:11:09 UTC
        

(In reply to comment #5)
> 
> I would expect as much, if you did the same in C program it'd probably blow up
> as well.  You should not, however, be getting that attempted to call a nil
> value error.  That means that the functions aren't being exported as far as Lua
> is concerned for some reason.  Have you got the right version of tolua++ and
> everything?

dev-lang/toluap-1.0.93
dev-lang/lua-5.1.4

> Also, take a look here for an example of how to draw with Lua properly:
> http://wiki.conky.be/index.php/Lua_Cario_bindings
> 

Running this example gives me:

Conky: desktop window (1400004) is subwindow of root window (32b)
Conky: drawing to desktop window
Conky: drawing to single buffer
Conky: can't load font 'Radio Space'
Conky: llua_do_call: function conky_cairo_test execution failed: attempt to call a nil value





Comment 7


Andreas Zins





          2009-11-09 10:24:39 UTC
        

Now I compiled conky by hand and it works.
I used the conky-1.7.2.tar.bz2 from my /usr/portage/distfiles, did ./configure --prefix=$HOME/conky --enable-lua-cairo, compiled it and surprisingly the lua cairo stuff works with that binary. Now I'm confused. :/
I'll take a closer look at the ebuild, perhaps I can dig something up...




Comment 8


Daniel Pielmeier






          2009-11-09 10:58:02 UTC
        

(In reply to comment #7)
> Now I compiled conky by hand and it works.
> I used the conky-1.7.2.tar.bz2 from my /usr/portage/distfiles, did ./configure
> --prefix=$HOME/conky --enable-lua-cairo, compiled it and surprisingly the lua
> cairo stuff works with that binary. Now I'm confused. :/
> I'll take a closer look at the ebuild, perhaps I can dig something up...

Maybe there are some configure options which are conflicting and thus causing this problems. I assume this because in your forums thread the output of conky -v shows lua and it's bindings as enabled. So it should work. With your manual configuration you use the options which are enabled or disabled by default plus the additional --enable-lua-cairo. This is different to the options which are used when building from the ebuild.

Can you do me a favour and run the manual build with the same options enabled and disabled like you did in the ebuild and try if this works. To make this task easier you can look into the build log under /var/log/portage for conky. Look at the configuration part, there should be a line which shows you the configure options used in this build.




Comment 9


Andreas Zins





          2009-11-09 12:40:38 UTC
        

Ok. I did as you requested. Unfortunately with the same result. The manual build binary works, the ebuild doesn't. 

What I did:
$ ./configure --prefix=$HOME/conky_ --enable-x11 --enable-double-buffer --enable-xdamage --enable-own-window --enable-imlib2 --enable-lua-cairo --enable-lua-imlib2 --enable-nvidia --enable-xft --enable-alsa --disable-apcupsd --disable-audacious --disable-curl --disable-debug --disable-eve --disable-hddtemp --disable-iostats --enable-lua --disable-ibm --disable-math --disable-moc --disable-mpd --enable-portmon --disable-rss --disable-weather-metar --disable-weather-xoap --enable-wlan

This configures the same options as the ebuild does, according to conky -v. 
I also tried the other way around:
$ USE="mpd moc X alsa math hddtemp portmon apcupsd -nano-syntax -nvidia truetype -wifi lua-cairo -lua-imlib iostats -imlib" emerge -v conky

That builds conky with the same options as ./configure --prefix=$HOME/conky --enable-lua-cairo does.

Both end up with the same result: Ebuild version fails and the manual build binary works fine.





Comment 10


Brenden Matthews





          2009-11-09 16:56:40 UTC
        

Are the libs being stripped or anything by portage?  I can't recall if it does that or not.  Perhaps try explicitly disabling that?




Comment 11


Daniel Pielmeier






          2009-11-09 19:26:48 UTC
        

(In reply to comment #10)
> Are the libs being stripped or anything by portage?  I can't recall if it does
> that or not.  Perhaps try explicitly disabling that?
> 

Portage strips everything by default. Prevent stripping gives me the same result as in comment #6.




Comment 12


Daniel Pielmeier






          2009-11-10 18:23:01 UTC
        

Today, I built conky by hand with my own configuration and the two configurations from Andreas in comment #9. No configuration gave me the expected result. I always get the "nil value" error when running the sample script from http://wiki.conky.be/index.php/Lua_Cario_bindings. Don't know what goes wrong here.




Comment 13


Brenden Matthews





          2009-11-10 18:28:26 UTC
        

(In reply to comment #12)
> Today, I built conky by hand with my own configuration and the two
> configurations from Andreas in comment #9. No configuration gave me the
> expected result. I always get the "nil value" error when running the sample
> script from http://wiki.conky.be/index.php/Lua_Cario_bindings. Don't know what
> goes wrong here.
> 

I don't have access to my Gentoo machine anymore, so I'm not really sure what I can do to help (worksforme).  I wrote the code on my Gentoo machine, and I don't recall encountering any such problems.




Comment 14


Brenden Matthews





          2009-11-10 18:32:35 UTC
        

(In reply to comment #13)
> 
> I don't have access to my Gentoo machine anymore, so I'm not really sure what I
> can do to help (worksforme).  I wrote the code on my Gentoo machine, and I
> don't recall encountering any such problems.
> 

Actually, it just occurred to me what might be happening.  In the build dir, check that you actually have libcairo.c (should look like http://omploader.org/vMnFvOQ).  There was a bug with the automake stuff, though I thought it had been resolved.  I suspect the source isn't being generated for some reason so it's just a null lib.




Comment 15


Daniel Pielmeier






          2009-11-10 18:48:54 UTC
        

(In reply to comment #14)
> 
> Actually, it just occurred to me what might be happening.  In the build dir,
> check that you actually have libcairo.c (should look like
> http://omploader.org/vMnFvOQ).  There was a bug with the automake stuff, though
> I thought it had been resolved.  I suspect the source isn't being generated for
> some reason so it's just a null lib.
> 

No unfortunatly I have exactly the same file in my build dir





Comment 16


Brenden Matthews





          2009-11-10 18:51:24 UTC
        

(In reply to comment #15)
> 
> No unfortunatly I have exactly the same file in my build dir
> 

Ah, well, in that case I'm fresh out of ideas.  Can you see the lib actually being compiled?  In the make output you should see something like:

/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../src    -D_REENTRANT -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/directfb -I/usr/include/libpng12   -D_REENTRANT -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/directfb -I/usr/include/libpng12   -I/usr/include/lua5.1    -MT libcairo_la-libcairo.lo -MD -MP -MF .deps/libcairo_la-libcairo.Tpo -c -o libcairo_la-libcairo.lo `test -f 'libcairo.c' || echo './'`libcairo.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../src -D_REENTRANT -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/directfb -I/usr/include/libpng12 -D_REENTRANT -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/directfb -I/usr/include/libpng12 -I/usr/include/lua5.1 -MT libcairo_la-libcairo.lo -MD -MP -MF .deps/libcairo_la-libcairo.Tpo -c libcairo.c  -fPIC -DPIC -o .libs/libcairo_la-libcairo.o





Comment 17


Brenden Matthews





          2009-11-10 18:59:50 UTC
        

Does the latest of git work?  If so, you could try git-bisect on 1.7.2 vs. master.




Comment 18


Daniel Pielmeier






          2009-11-10 19:29:04 UTC
        

I think I have found the problem. I compared the compiler output and here "-I/usr/include/lua5.1" is missing.

There is no such directory here. The lua includes are installed under /usr/include:

/usr/include/lauxlib.h
/usr/include/lua.h
/usr/include/lua.hpp
/usr/include/luaconf.h
/usr/include/lualib.h

Conky's configure checks for lua's via PKG_CHECK_MODULES.

In the lua pkgconfig file the include path is "INSTALL_INC= ${prefix}/include"

Looks like conky does not know about this leaves out the lua includes.




Comment 19


Brenden Matthews





          2009-11-10 19:33:07 UTC
        

(In reply to comment #18)
> I think I have found the problem. I compared the compiler output and here
> "-I/usr/include/lua5.1" is missing.
> 
> There is no such directory here. The lua includes are installed under
> /usr/include:
> 
> /usr/include/lauxlib.h
> /usr/include/lua.h
> /usr/include/lua.hpp
> /usr/include/luaconf.h
> /usr/include/lualib.h
> 
> Conky's configure checks for lua's via PKG_CHECK_MODULES.
> 
> In the lua pkgconfig file the include path is "INSTALL_INC= ${prefix}/include"
> 
> Looks like conky does not know about this leaves out the lua includes.
> 

So you're saying `pkg-config --cflags lua5.1` is reporting the wrong path for Lua includes?  Sounds like a bug with Gentoo's Lua to me.  It seems fine here on Debian (and last time I used Gentoo it worked fine--perhaps a problem with that particular version?).




Comment 20


Daniel Pielmeier






          2009-11-10 19:55:23 UTC
        

Created attachment 209859 [details]
output of pkg-config --debug lua

(In reply to comment #19)
> 
> So you're saying `pkg-config --cflags lua5.1` is reporting the wrong path for
> Lua includes?  Sounds like a bug with Gentoo's Lua to me.  It seems fine here
> on Debian (and last time I used Gentoo it worked fine--perhaps a problem with
> that particular version?).
> 

The problem is it is called lua instead of lua5.1

pkg-config --cflags lua5.1
Package lua5.1 was not found in the pkg-config search path.
Perhaps you should add the directory containing `lua5.1.pc'
to the PKG_CONFIG_PATH environment variable
No package 'lua5.1' found

pkg-config --cflags lua
 
Which returns nothing. Although it should return /usr/include. I have attached the output of pkg-config --debug lua




Comment 21


Brenden Matthews





          2009-11-10 20:03:09 UTC
        

(In reply to comment #20)
> The problem is it is called lua instead of lua5.1
> 

Conky checks for lua, lua-5.1, and lua5.1 (in that order).  The autoconf code is:

    PKG_CHECK_MODULES(LUA, lua >= 5.1, [ ],[
        PKG_CHECK_MODULES(LUA51, lua-5.1 >= 5.1, [ ],[
            PKG_CHECK_MODULES(LUA51, lua5.1 >= 5.1)
        ])
    ])

> pkg-config --cflags lua
> 
> Which returns nothing. Although it should return /usr/include. I have attached
> the output of pkg-config --debug lua
> 

Looks like the missing bit is:

  Cflags: -I${includedir}/${lib_name}

in /usr/lib/pkgconfig/lua5.1.pc (or /usr/lib/pkgconfig/lua.pc in your case).  Pretty sure it's a bug with Lua, not Conky.  Easy enough to patch though.




Comment 22


Brenden Matthews





          2009-11-10 20:07:52 UTC
        

(In reply to comment #21)
> 
> Looks like the missing bit is:
> 
>   Cflags: -I${includedir}/${lib_name}
> 
> in /usr/lib/pkgconfig/lua5.1.pc (or /usr/lib/pkgconfig/lua.pc in your case). 
> Pretty sure it's a bug with Lua, not Conky.  Easy enough to patch though.
> 

Actually, that doesn't make sense, since the libs are in /usr/include (not /usr/include/lua).  But why does pkg-config not return -I/usr/include?




Comment 23


Daniel Pielmeier






          2009-11-10 20:38:30 UTC
        

(In reply to comment #22)
> 
> Actually, that doesn't make sense, since the libs are in /usr/include (not
> /usr/include/lua).  But why does pkg-config not return -I/usr/include?
> 

I think this is the problem. From the debug output:

Package Lua has -I/usr/include in Cflags
Removing -I/usr/include from cflags for lua


I tried "Cflags: -I${includedir}/${V}" as you have suggested. If I run "pkg-config --cflags lua" for this pkgconfig file it returns the proper path

pkg-config --cflags lua
-I/usr/include/5.1  

So I guess /usr/include is the default path and thus removed from cflags. Just stabbing in the dark here.




Comment 24


Brenden Matthews





          2009-11-10 20:40:25 UTC
        

Does manually adding -I/usr/include to the cflags fix it?




Comment 25


Daniel Pielmeier






          2009-11-11 12:33:04 UTC
        

(In reply to comment #24)
> Does manually adding -I/usr/include to the cflags fix it?

I had no success with manually adding the inclde path to the cflags. Some googling revealed that adding /usr/include to cflags is a bad idea. This is probably the reason why pkgconfig and probably also make remove this path.

Then I patched the Lua makefile and pkgconfig file to install the includes below /usr/include/lua-5.1.4. When building conky against this version the include path shows up in the conky build, because pkgconfig now retuns this path. But unfortunately this did not fix the problem with the nil error.

I think it doesn't make a difference if the includes are in /usr/include or in /usr/include/lua-5.1.4, because if the compiler does not find them the build would fail which is not the case in both situations. So the problem must be somewhere else.




Comment 26


Daniel Pielmeier






          2009-11-21 21:06:11 UTC
        

I played a bit with the examples from the wiki page and other examples on the web. Some of them did work, some need tweaking to get them work and some did not work at all. I had success with some scripts from http://blog.conky.be. Note: When downloading the files, they are saved as tar.gz but actually are tar.gz.gz. At least this is the case here.

One fact maybe is worth mentioning here. It looks like file names are important. If you are using imlib2 or cairo bindings never call your lua scripts cairo.lua or imlib2.lua as this will throw errors like the following.

Conky: llua_load: ./imlib2.lua:12: loop or previous error loading module 'imlib2'
Conky: llua_do_call: function conky_imlib2_draw execution failed: attempt to call a nil value

If the lua script has another name the problem disappears. This is because the scriptname (imlib2.lua) collides with the require 'imlib2' line within the script. So if you remove the require line it works again. 

Everything else seems to me are lua programming issues and from now on I consider this a none bug.

@Andreas: Can you please test the following setup. Conky shouldn't throw an error here.

.conkyrc
lua_load test.lua
lua_draw_hook_pre test
TEXT
$nodename $sysname $kernel on $machine

test.lua 
require 'cairo'

function conky_test()
	if conky_window == nil then return end
	local cs = cairo_xlib_surface_create(conky_window.display ,conky_window.drawable, conky_window.visual, conky_window.width, conky_window.height)
end




Comment 27


Andreas Zins





          2009-11-23 12:47:00 UTC
        

Unfortunately renaming the files didn't fix the problem for me. 
But did find out an other interesting fact:
If I do a 'cd /usr/bin' and call conky from there the error disappears. That is also true for the manual compiled version of conky. If I change to directory where the conky binary is located conky works correctly. 
But it gets worse: For some strange reason this is only true for my default user. If I su to an other user the problem disappears completely.
I tested:
http://blog.conky.be/wp-content/uploads/2009/10/conky_widgets.tar.gz

That works great with any user but my default. I guess that leaves me with a messed up user profile. I'll try to fix that now. 




Comment 28


Daniel Pielmeier






          2009-11-30 15:00:54 UTC
        

So this seems to be a user configuration issue. Closing this bug for now.









Format For Printing
 - XML
 - Clone This Bug
 - Clone In The Same 
                        Product
 - Top of page 







Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]

