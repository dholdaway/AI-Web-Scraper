Title: 748117 – dev-qt/qtgui-5.15.1-r1: internal compiler error
URL: https://bugs.gentoo.org/show_bug.cgi?id=748117

Go to: 
		Gentoo Home
Documentation
Forums
Lists
Bugs
Planet
Store
Wiki
Get Gentoo!





Gentoo's Bugzilla – Bug 748117
dev-qt/qtgui-5.15.1-r1: internal compiler error
Last modified: 2020-10-14 21:49:37 UTC node [vulture]


Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]













Bug 748117 
      - dev-qt/qtgui-5.15.1-r1: internal compiler error


Summary:
dev-qt/qtgui-5.15.1-r1: internal compiler error
    








Status:
    

RESOLVED
          WORKSFORME
      






Alias:


        None
    





Product:

Gentoo Linux




Classification:

Unclassified




Component:

Current packages

  (show other bugs)



Hardware:

AMD64
        Linux
      







Importance:
      
Normal
       major
      


Assignee:

Qt Bug Alias








URL:







Whiteboard:




Keywords:








Depends on:







Blocks:









 





      Reported:
    
2020-10-12 21:45 UTC by Dutch Ingraham





      Modified:
    
2020-10-14 21:49 UTC
      (History)
    




          CC List:
        

2 
          users
          
            (show)
          



sam
toolchain









See Also:






Package list:







Runtime testing required:

---























      Attachments
    




build.log

              (build.log,332.75 KB,
                text/plain)

            
2020-10-12 21:45 UTC,

            Dutch Ingraham




Details





emerge --info

              (emerge --info,5.55 KB,
                text/plain)

            
2020-10-12 21:47 UTC,

            Dutch Ingraham




Details





View All

Add an attachment
        (proposed patch, testcase, etc.)
    








Note
              You need to
              log in
              before you can comment on or make changes to this bug.
            

















Description


Dutch Ingraham





          2020-10-12 21:45:53 UTC
        

Created attachment 664918 [details]
build.log

Full world update today brought stable dev-qt/*-5.15.1[-r1] packages.  dev-qt/qtgui-5.15.1-r1 failed to build with an internal compiler error: Segmentation fault.

build.log and emerge --info attached.  Severity classified as 'blocker' since dev-qt/* is now inconsistent and blocking all kde apps.

Please let me know if further information needed.




Comment 1


Dutch Ingraham





          2020-10-12 21:47:42 UTC
        

Created attachment 664921 [details]
emerge --info




Comment 2


Sam James









          2020-10-12 21:51:00 UTC
        

Please could you do the following:
1) Run a memtest program (like memtest86) to verify your RAM is working OK. This is a common cause of ICEs.

2) Follow this guide https://wiki.gentoo.org/wiki/Gcc-ICE-reporting-guide to help us reproduce the issue.




Comment 3


Sergei Trofimovich (RETIRED)






          2020-10-13 06:59:18 UTC
        

Here is the crash snippet:

"""
In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/g++-v9/bits/node_handle.h:39,
                 from /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/g++-v9/bits/hashtable.h:37,
                 from /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/g++-v9/unordered_map:46,
                 from /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/g++-v9/functional:61,
                 from /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/g++-v9/pstl/glue_algorithm_defs.h:13,
                 from /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/g++-v9/algorithm:71,
                 from /usr/include/qt5/QtCore/qglobal.h:142,
                 from /var/tmp/portage/dev-qt/qtgui-5.15.1-r1/work/qtbase-everywhere-src-5.15.1/mkspecs/linux-g++/qplatformdefs.h:45,
                 from /var/tmp/portage/dev-qt/qtgui-5.15.1-r1/work/qtbase-everywhere-src-5.15.1/src/gui/image/qxbmhandler.cpp:40:
/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/g++-v9/optional: In substitution of ‘template<class _Tp> template<class ... _Cond> using _Requires = std::enable_if_t<__and_v<_Cond ...>, bool> [with _Cond = {std::__not_<std::is_same<std::optional<_Tp>, typename std::remove_cv<typename std::remove_reference<_SrcTuple>::type>::type> >, std::__not_<std::is_same<std::in_place_t, typename std::remove_cv<typename std::remove_reference<_SrcTuple>::type>::type> >, std::is_constructible<_Tp, _Up&&>, std::__not_<std::is_convertible<_Up&&, _Tp> >}; _Tp = _Tp]’:
/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/g++-v9/optional:704:39:   required from here
/usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/g++-v9/optional:704:39: internal compiler error: Segmentation fault
  704 |     __not_<is_convertible<_Up&&, _Tp>>> = false>
      |                                       ^
Please submit a full bug report,
with preprocessed source if appropriate.
See <https://bugs.gentoo.org/> for instructions.
make: *** [Makefile:45932: .obj/qxbmhandler.o] Error 1
make: *** Waiting for unfinished jobs....
"""

I have a few questions for you:

1. Is this crash reproducible if you try to rerun emerge?
2. Does it happen if you avoid -march=native in CFLAGS?




Comment 4


Dutch Ingraham





          2020-10-13 15:07:30 UTC
        

(In reply to Sergei Trofimovich from comment #3)

> 
> I have a few questions for you:
> 
> 1. Is this crash reproducible if you try to rerun emerge?
> 2. Does it happen if you avoid -march=native in CFLAGS?

1. Yes, it was reproducible; I re-ran the @world update almost immediately after the initial failure and the build failed again.  However, I later did a cold restart and attempted the build from a root console, and the build succeeded.  Possibly initially a polluted environment?

2. Did not reach.




Comment 5


Sergei Trofimovich (RETIRED)






          2020-10-13 20:55:09 UTC
        

(In reply to Dutch Ingraham from comment #4)
> (In reply to Sergei Trofimovich from comment #3)
> 
> > 
> > I have a few questions for you:
> > 
> > 1. Is this crash reproducible if you try to rerun emerge?
> > 2. Does it happen if you avoid -march=native in CFLAGS?
> 
> 1. Yes, it was reproducible; I re-ran the @world update almost immediately
> after the initial failure and the build failed again.  However, I later did
> a cold restart and attempted the build from a root console, and the build
> succeeded.  Possibly initially a polluted environment?

Might be. But I would suspect an OOM failue (if something else like browser takes a bulk of available memory), bug in hardware (probably RAM bit flips) or memory corruption in kernel.

If your system can run sys-apps/memtest86+ I suggest to give it a try to have some confidence that RAM has no obvious defects.




Comment 6


Dutch Ingraham





          2020-10-14 14:39:48 UTC
        

> 
> Might be. But I would suspect an OOM failue (if something else like browser
> takes a bulk of available memory), bug in hardware (probably RAM bit flips)
> or memory corruption in kernel.
> 
> If your system can run sys-apps/memtest86+ I suggest to give it a try to
> have some confidence that RAM has no obvious defects.

1. Sorry - I failed to mention in the original report that I had checked dmsg for the OOM killer and it was not invoked.  Just for the heck of it, also checked the build.log for brk() or mmap() calls that might fail with ENOMEM but there were none.

2. I ran memtest86+ overnight but no errors were found.

Since no other users seem to have reported this either here or on #gentoo, I suspect it was solely a blip on my end.




Comment 7


Sergei Trofimovich (RETIRED)






          2020-10-14 21:49:37 UTC
        

Let's close as WORKSFORME then. If it comes back again we can try to debug as it happens.









Format For Printing
 - XML
 - Clone This Bug
 - Clone In The Same 
                        Product
 - Top of page 







Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]

