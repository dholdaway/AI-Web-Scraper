Title: 561956 – dev-util/cmake-3.3.2 thru 3.4.3 fail kde-frameworks/baloo-5.14.0 thru 5.19.0 build in target baloosearchmodule.so: undefined reference to `vtable for Factory'
URL: https://bugs.gentoo.org/show_bug.cgi?id=561956

Go to: 
		Gentoo Home
Documentation
Forums
Lists
Bugs
Planet
Store
Wiki
Get Gentoo!





Gentoo's Bugzilla – Bug 561956
dev-util/cmake-3.3.2 thru 3.4.3 fail kde-frameworks/baloo-5.14.0 thru 5.19.0 build in target baloosearchmodule.so: undefined reference to `vtable for Factory'
Last modified: 2016-03-11 13:46:46 UTC node [vulture]


Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]













Bug 561956 
      - dev-util/cmake-3.3.2 thru 3.4.3 fail kde-frameworks/baloo-5.14.0 thru 5.19.0 build in target baloosearchmodule.so: undefined reference to `vtable for Factory'


Summary:
dev-util/cmake-3.3.2 thru 3.4.3 fail kde-frameworks/baloo-5.14.0 thru 5.19.0 ...
        









Status:
    

RESOLVED
          WORKSFORME
      






Alias:


        None
    





Product:

Gentoo Linux




Classification:

Unclassified




Component:

[OLD] KDE

  (show other bugs)



Hardware:

All
        Linux
      







Importance:
      
Normal
       normal
      


Assignee:

Gentoo KDE team








URL:







Whiteboard:




Keywords:








Depends on:







Blocks:









 





      Reported:
    
2015-10-01 08:30 UTC by Duncan





      Modified:
    
2016-03-11 13:46 UTC
      (History)
    




          CC List:
        

0 
          users
        








See Also:






Package list:







Runtime testing required:

---























      Attachments
    




emerge --info kde-frameworks/baloo

              (emerge.baloo.info,7.05 KB,
                text/plain)

            
2015-10-01 08:30 UTC,

            Duncan




Details





View All

Add an attachment
        (proposed patch, testcase, etc.)
    








Note
              You need to
              log in
              before you can comment on or make changes to this bug.
            

















Description


Duncan





          2015-10-01 08:30:33 UTC
        

Created attachment 413406 [details]
emerge --info kde-frameworks/baloo

With the bump to kde-frameworks/baloo-5.14.0-r1, I tried to build it and failed.  But the error didn't appear related to the patch that triggered the -r1 (according to git).  So I tried building 5.14.0 again, and it failed too, with the same basic error.

But 5.14.0 built and installed just fine for me back on Sept. 14, ~2.5 weeks ago, so what has changed since then?  FWIW, revdep-rebuild (which I religiously run after every update, tho with automated subslot rebuilds and changed-deps rebuilds revdep-rebuild doesn't find much, these days) says I'm fine.

FWIW, I'm ~amd64, with the kde4 desktop installed, and all but the 4-blocking-packages from the basic plasma-desktop-5 installed, in ordered to easier test and perhaps configure it properly in ordered to continue to use it, whenever I have the time.

I have noticed (the frameworks) baloo crashing when I start kde4 (perhaps the bug the -r1 patch was for), but as I don't wish to have semantic-desktop anyway, and don't have it in kde4, it hasn't mattered much.  At some point I imagine I'll switch away from plasma5 if it still requires baloo by then, because as I said I don't use it and don't wish it to be on my system, but I'm trying to give it another go for testing anyway.

Meanwhile, here's the error (including the configuration, this is for 5.14.0 but -r1 was the same vtable for factory error):

>>> Configuring source in /tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0 ...
>>> Working in BUILD_DIR: "/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build"
cmake --no-warn-unused-cli -C /tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_TESTING=OFF -DKDE_INSTALL_USE_QT_SYS_PATHS=ON -DCMAKE_BUILD_TYPE=Gentoo -DCMAKE_INSTALL_DO_STRIP=OFF -DCMAKE_USER_MAKE_RULES_OVERRIDE=/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/gentoo_rules.cmake -DCMAKE_TOOLCHAIN_FILE=/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/gentoo_toolchain.cmake  /tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0
Not searching for unused variables given on the command line.
loading initial cache file /tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/gentoo_common_config.cmake
-- The C compiler identification is GNU 4.9.3
-- The CXX compiler identification is GNU 4.9.3
-- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-pc-linux-gnu-gcc
-- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-pc-linux-gnu-gcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-pc-linux-gnu-g++
-- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-pc-linux-gnu-g++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- 

-- Looking for __GLIBC__
-- Looking for __GLIBC__ - found
-- Performing Test _OFFT_IS_64BIT
-- Performing Test _OFFT_IS_64BIT - Success
-- Found Gettext: /usr/sbin/msgmerge (found version "0.19.6") 
-- Found PythonInterp: /usr/sbin/python (found version "2.7.10") 
-- Found KF5I18n: /usr/lib64/cmake/KF5I18n/KF5I18nConfig.cmake (found version "5.14.0") 
-- Found KF5Config: /usr/lib64/cmake/KF5Config/KF5ConfigConfig.cmake (found version "5.14.0") 
-- Found KF5IdleTime: /usr/lib64/cmake/KF5IdleTime/KF5IdleTimeConfig.cmake (found version "5.14.0") 
-- Found KF5Auth: /usr/lib64/cmake/KF5Auth/KF5AuthConfig.cmake (found version "5.14.0") 
-- Found KF5Crash: /usr/lib64/cmake/KF5Crash/KF5CrashConfig.cmake (found version "5.14.0") 
-- Found KF5Solid: /usr/lib64/cmake/KF5Solid/KF5SolidConfig.cmake (found version "5.14.0") 
-- Found KF5KIO: /usr/lib64/cmake/KF5KIO/KF5KIOConfig.cmake (found version "5.14.0") 
-- Found KF5DBusAddons: /usr/lib64/cmake/KF5DBusAddons/KF5DBusAddonsConfig.cmake (found version "5.14.0") 
-- Found KF5FileMetaData: /usr/lib64/cmake/KF5FileMetaData/KF5FileMetaDataConfig.cmake (found version "5.14.0") 
-- Found KF5: success (found suitable version "5.14.0", minimum required is "5.14.0") found components:  I18n Config IdleTime Auth Crash Solid KIO DBusAddons FileMetaData 
-- LMDB lib: /lib64/liblmdb.so
-- LMDB include: 
-- Found LMDB: /include  
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- 
-- The following OPTIONAL packages have been found:

 * Qt5Core

-- The following REQUIRED packages have been found:

 * ECM (required version >= 5.14.0) , Extra CMake Modules. , <https://projects.kde.org/projects/kdesupport/extra-cmake-modules>
 * Qt5Gui (required version >= 5.4.2)
 * Qt5Widgets
 * Qt5Network (required version >= 5.4.2)
 * Qt5Qml (required version >= 5.4.2)
 * Qt5Quick
 * Qt5DBus
 * Qt5 (required version >= 5.3.0)
 * Gettext
 * PythonInterp
 * KF5I18n (required version >= 5.14.0)
 * KF5Config (required version >= 5.14.0)
 * KF5IdleTime (required version >= 5.14.0)
 * KF5Auth (required version >= 5.14.0)
 * KF5Crash (required version >= 5.14.0)
 * KF5Solid (required version >= 5.14.0)
 * KF5KIO (required version >= 5.14.0)
 * KF5DBusAddons (required version >= 5.14.0)
 * KF5FileMetaData (required version >= 5.14.0)
 * KF5 (required version >= 5.14.0)
 * LMDB , Lightning Memory-Mapped Database (LMDB) , <http://symas.com/mdb>

-- <<< Gentoo configuration >>>
Build type      Gentoo
Install path    /usr
Compiler flags:
C               -march=native -pipe -O2 -frename-registers -fweb -fmerge-all-constants  -fgcse-sm -fgcse-las -fgcse-after-reload -ftree-vectorize -freorder-blocks-and-partition  -std=iso9899:1990 -fno-common -Wall -Wextra -Wcast-align -Wchar-subscripts -Wformat-security -Wno-long-long -Wpointer-arith -Wundef -Wmissing-format-attribute -Wwrite-strings -Werror=implicit-function-declaration
C++             -march=native -pipe -O2 -frename-registers -fweb -fmerge-all-constants  -fgcse-sm -fgcse-las -fgcse-after-reload -ftree-vectorize  -std=c++0x -fno-exceptions -Wall -Wextra -Wcast-align -Wchar-subscripts -Wformat-security -Wno-long-long -Wpointer-arith -Wundef -Wnon-virtual-dtor -Woverloaded-virtual -Werror=return-type -pedantic
Linker flags:
Executable      -Wl,--enable-new-dtags  -Wl,-z,now,--as-needed,-O1,--hash-style=gnu,--sort-common
Module          -Wl,--no-undefined -Wl,--fatal-warnings -Wl,--enable-new-dtags  -Wl,-z,now,--as-needed,-O1,--hash-style=gnu,--sort-common
Shared          -Wl,--no-undefined -Wl,--fatal-warnings -Wl,--enable-new-dtags  -Wl,-z,now,--as-needed,-O1,--hash-style=gnu,--sort-common

-- Configuring done

[snip]


[ 23%] Linking CXX shared module baloosearchmodule.so

[snip]

[ 28%] Building CXX object src/engine/CMakeFiles/KF5BalooEngine.dir/documenturldb.cpp.o
cd /tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/engine && /usr/lib64/ccache/bin/x86_64-pc-linux-gnu-g++  -DKCOREADDONS_LIB -DKF5BalooEngine_EXPORTS -DQT_CORE_LIB -DQT_NO_CAST_FROM_BYTEARRAY -DQT_NO_CAST_TO_ASCII -DQT_NO_DEBUG -DQT_NO_KEYWORDS -DQT_NO_SIGNALS_SLOTS_KEYWORDS -DQT_NO_URL_CAST_FROM_STRING -DQT_USE_FAST_OPERATOR_PLUS -DQT_USE_QSTRINGBUILDER -D_GNU_SOURCE -D_LARGEFILE64_SOURCE  -DQT_NO_DEBUG -DNDEBUG -march=native -pipe -O2 -frename-registers -fweb -fmerge-all-constants  -fgcse-sm -fgcse-las -fgcse-after-reload -ftree-vectorize  -std=c++0x -fno-exceptions -Wall -Wextra -Wcast-align -Wchar-subscripts -Wformat-security -Wno-long-long -Wpointer-arith -Wundef -Wnon-virtual-dtor -Woverloaded-virtual -Werror=return-type -pedantic -fPIC -fvisibility=hidden -fvisibility-inlines-hidden -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/engine -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/engine -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0 -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/lib -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/lib -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/codecs -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/file -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/file -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/dbus -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/codecs -I/include -isystem /usr/include/qt5 -isystem /usr/include/qt5/QtCore -isystem /usr/lib64/qt5/mkspecs/linux-g++ -isystem /usr/include/KF5/KCoreAddons -isystem /usr/include/KF5    -fPIC -o CMakeFiles/KF5BalooEngine.dir/documenttimedb.cpp.o -c /tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/engine/documenttimedb.cpp
cd /tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/engine && /usr/lib64/ccache/bin/x86_64-pc-linux-gnu-g++  -DKCOREADDONS_LIB -DKF5BalooEngine_EXPORTS -DQT_CORE_LIB -DQT_NO_CAST_FROM_BYTEARRAY -DQT_NO_CAST_TO_ASCII -DQT_NO_DEBUG -DQT_NO_KEYWORDS -DQT_NO_SIGNALS_SLOTS_KEYWORDS -DQT_NO_URL_CAST_FROM_STRING -DQT_USE_FAST_OPERATOR_PLUS -DQT_USE_QSTRINGBUILDER -D_GNU_SOURCE -D_LARGEFILE64_SOURCE  -DQT_NO_DEBUG -DNDEBUG -march=native -pipe -O2 -frename-registers -fweb -fmerge-all-constants  -fgcse-sm -fgcse-las -fgcse-after-reload -ftree-vectorize  -std=c++0x -fno-exceptions -Wall -Wextra -Wcast-align -Wchar-subscripts -Wformat-security -Wno-long-long -Wpointer-arith -Wundef -Wnon-virtual-dtor -Woverloaded-virtual -Werror=return-type -pedantic -fPIC -fvisibility=hidden -fvisibility-inlines-hidden -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/engine -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/engine -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0 -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/lib -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/lib -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/codecs -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/file -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/file -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/dbus -I/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build/src/codecs -I/include -isystem /usr/include/qt5 -isystem /usr/include/qt5/QtCore -isystem /usr/lib64/qt5/mkspecs/linux-g++ -isystem /usr/include/KF5/KCoreAddons -isystem /usr/include/KF5    -fPIC -o CMakeFiles/KF5BalooEngine.dir/documenturldb.cpp.o -c /tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0/src/engine/documenturldb.cpp
CMakeFiles/baloosearchmodule.dir/baloosearchmodule.cpp.o: In function `Factory::Factory()':
baloosearchmodule.cpp:(.text+0x8c8): undefined reference to `vtable for Factory'
CMakeFiles/baloosearchmodule.dir/baloosearchmodule.cpp.o: In function `Factory::~Factory()':
baloosearchmodule.cpp:(.text+0x953): undefined reference to `vtable for Factory'
CMakeFiles/baloosearchmodule.dir/baloosearchmodule.cpp.o: In function `Factory::~Factory()':
baloosearchmodule.cpp:(.text+0x96b): undefined reference to `vtable for Factory'
collect2: error: ld returned 1 exit status
src/kioslaves/kded/CMakeFiles/baloosearchmodule.dir/build.make:120: recipe for target 'src/kioslaves/kded/baloosearchmodule.so' failed
make[2]: *** [src/kioslaves/kded/baloosearchmodule.so] Error 1
make[2]: Leaving directory '/tmp/portage/kde-frameworks/baloo-5.14.0/work/baloo-5.14.0_build'
CMakeFiles/Makefile2:1268: recipe for target 'src/kioslaves/kded/CMakeFiles/baloosearchmodule.dir/all' failed
make[1]: *** [src/kioslaves/kded/CMakeFiles/baloosearchmodule.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....


emerge --info kde-frameworks/baloo to be attached due to size, but... -debug -doc -test




Comment 1


Michael Palimaka (kensington)






          2015-10-01 12:15:51 UTC
        

Can you try without ccache please, and failing that with more minimal CFLAGs?




Comment 2


Duncan





          2015-10-02 07:27:05 UTC
        

(In reply to Michael Palimaka (kensington) from comment #1)
> Can you try without ccache please, and failing that with more minimal CFLAGs?

Just tried with exported CCACHE_RECACHE=1, no change, except that the part of the build that did complete didn't fly by so fast so I know it was indeed forcing the recache.  Same with FEATURES=-ccache, just in case.

And (after more testing)...

Tried CFLAGS="-pipe -O2" (not even -native), with the same results.

Meanwhile, mentioned below/above but might have been lost in the noise...

5.14.0 built for me just fine only ~3 weeks ago, Sept 14, using my usual CFLAGS, etc, and now it won't rebuild.

The behavior is that of a missed dependency rebuild somewhere, but I always update deep newuse changeddeps (it's in my update script so it can't be forgotten), and neither that nor revdep-rebuild says there's anything (other than baloo) needing updating or rebuilding.

What /should/ provide Factory, and vtable with it?  Not being a dev I don't  know how to (easily) track that down, tho were I forced to I could probably do it with some googling, possibly of the net and of the sources, both.  Sounds like something pretty basic, maybe some bit of qt5?

The other possibility would be to manually check the baloo deps and see if there's anything that looks like a dep might have been updated, that thus needs a rebuild that isn't being detected, educated-guessing one dep at a time to try rebuilding, and see if that lets baloo itself rebuild.  At least it doesn't appear to directly dep on qtwebkit, which always takes so long to rebuild...




Comment 3


Duncan





          2015-10-02 08:38:40 UTC
        

The culprit is dev-util/cmake-3.3.2, built and installed on Sept 18, four days after the successful baloo build (5.14.0), replacing cmake-3.3.1-r1.

Doing an emerge -K =cmake-3.3.1-r1 allowed a successful baloo build (5.14.0-r1 this time), so the problem must be in cmake-3.3.2!  Confirmed by emerging -K cmake again (to get the 3.3.2 update), and now baloo fails to build again, so indeed, it's a bug in cmake-3.3.2.

Doing a quick diff of the baloo build logs between cmake-3.3.2 (fail) and cmake-3.3.1-r1...

The first diffs are in the configure section. 

cmake-3.3.2 (failed with, tho later in compile, not here in configure)

-- LMDB lib: /lib64/liblmdb.so
-- Found LMDB: /include

3.3.1-r1 (succeeded with)

-- LMDB lib: /usr/lib64/liblmdb.so
-- Found LMDB: /usr/include

I have /usr merged to /, with /usr a symlink: /usr -> .  So /usr/include becomes /include, and /usr/lib64/liblmdb.so becomes /lib64/liblmdb.so, with the /usr variants having a symlink at the /usr -> . level.  Due to the symlink either one /should/ work, but...

That's the only difference in the configure section.  There are of course many differences in the build due to multi-jobbing, so direct compare there is more difficult, unless I try with MAKEOPTS=-j1.  Do I need to try that and get build diffs between cmake versions?

This seems similar to the still unfixed bug #532426 (libraw), tho in that case, no cmake-3.x seems to work, and I have to revert to 2.x to build libraw.  Also, there, it's specifically because the /usr -> . symlink effects a // in the path, which 3.x interprets as a network path, which doesn't work with DESTDIR, so it errors out, tho I still lack a fix or an explanation of any workaround I can do, so I simply have to remerge cmake-2.x when I want to rebuild libraw.  Here, it's apparently a subtly different issue, as 3.x worked thru 3.3.1-r1, and we don't know yet that it's specifically a // being interpreted as a network path, problem, tho it might be, perhaps working until now because it isn't or wasn't used with DESTDIR?)




Comment 4


Duncan





          2015-10-15 15:25:40 UTC
        

Baloo-5.15.0 affected now too, but as the problem seems to be cmake-3.3.2 (including -r1), not baloo, because cmake-3.3.1 built baloo fine, I'm changing the title/summary accordingly.




Comment 5


Duncan





          2015-10-25 08:51:39 UTC
        

(In reply to Duncan from comment #3)
> The culprit is dev-util/cmake-3.3.2

> This seems similar to the still unfixed bug #532426 (libraw)

FWIW that one now fixed. =:^)  Tho don't know exactly when/how.

Lacking further suggestions to fix this one, I'm masking ~dev-util/cmake-3.3.2 here, as it seems it is broken, at least on/with baloo.  It's ~arch, while the 3.3.1-r1 I'll be dropping back to is stable, so hopefully it won't disappear until this bug with 3.3.2 is fixed.




Comment 6


Duncan





          2015-11-13 22:46:41 UTC
        

Another cmake and baloo bump, another update.  cmake-3.4.0 still fails on now baloo 5.16.0, same factory/vtable errors.

So I guess I mask cmake-3.4.0 too. =:^(




Comment 7


Duncan





          2015-12-18 05:55:12 UTC
        

Title update and bump, now up to cmake-3.4.1 and baloo-5.17.0, still failing, still on vtable for factory.




Comment 8


Duncan





          2016-01-21 15:38:42 UTC
        

Updating again.

Still failing with baloo-5.18.0 and cmake-3.4.2, same vtable for factory error, so will now have ~cmake-3.3.2, ~3.4.0, ~3.4.1, and =3.4.2 masked.

I'm finally fully on plasma5 now.  What's the likelihood and possible timing of baloo being made optional as it was in kde4?  That would kill the entire problem, for me at least.




Comment 9


Duncan





          2016-02-14 09:33:22 UTC
        

Updating again, still failing with cmake-3.4.3 on baloo 5.19.0.

You know, if kde-plasma/plasma-desktop and kde-plasma/plasma-workspace had IUSE=semantic-desktop, like kde4's plasma1 aka plasma4, I'd have it off and wouldn't need baloo and thus wouldn't be troubled by this bug, as those are the only packages I have merged that dep on baloo.  It's off at runtime anyway.  (Hint, hint. =:^)




Comment 10


Andreas Sturmlechner






          2016-02-14 10:18:51 UTC
        

If you know the error is within cmake, and it was introduced between 3.3.1 and 3.3.2, then how about you try to (git) bisect yourself through to the troubling commit? And submit the information upstream?




Comment 11


Duncan





          2016-02-14 12:21:25 UTC
        

(In reply to Andreas Sturmlechner from comment #10)
> how about you try to (git) bisect?

I had thought about that... but hadn't really had the time, and was /hoping/ the problem might go away with a few upgrades (the reason I've been masking specific cmake versions, not backing up to stable-only or something, to check the problem on each upgrade), and it could also go away if plasma-workspace and plasma-desktop quit made it an optional dep as in kde4, which I'm still hoping eventually happens.

But I've always said that while I might tolerate semantic-desktop and baloo on kde5 until things get sorted out a bit, one way or another, it was not particularly likely to be there for long, even if it meant switching to something other than kde as my desktop.  Due to the kde4 upgrade breakage and replacement and kmail jumping the akonadi shark and its replacement mid-kde4, I'm not near as dependent on kde as I was in the late kde3 era, primarily the desktop (and superkaramba but it's already out the door upstream, unfortunately, so its time is obviously limited here as well), and if it has to go too, well...

Meanwhile, after finding that only plasma-workspace and plasma-desktop were requiring baloo in my last comment, I decided to see just how hard it'd be to kill those deps, which I had hoped were runtime-only, much like udisks (which pulls in a metric ton of its own deps, but is runtime-only so already package.provided).  Turns out not, but commenting out a half-dozen lines or less in each package's sources kills the dep. =:^)

I only did the hacks and installs manually for testing so far, but I'm up and running baloo-less on kde-plasma as I type this, so it worked.  =:^)  And I still have the ebuild live-patching scripts I was running from back when kde4 was temporarily semantic-desktop-required, so now that I know it's possible, it's only a matter of generating patches to apply automatically either to the sources from /etc/portage/patches/, or to the ebuilds themselves from /etc/portage/patches.ebuild/, and I should be balooless without individual update hacking once again. =:^)

Tho I still have to figure out what to do with milou (apparently runtime-only dep of plasma-workspace -- only) and accountsservice (which is pulling in polkit but is apparently a runtime-only dep of plasma-desktop -- only), but those aren't bugging out on me every upgrade, like baloo was.




Comment 12


Duncan





          2016-02-14 13:08:24 UTC
        

(In reply to Duncan from comment #11)
> Tho I still have to figure out what to do with milou (apparently
> runtime-only dep of plasma-workspace -- only) and accountsservice (which is
> pulling in polkit but is apparently a runtime-only dep of plasma-desktop --
> only), but those aren't bugging out on me every upgrade, like baloo was.

Turns out milou isn't as "built on top of baloo" as the description would lead one to believe, and doesn't need it, but is rather a low-dep (for someone with a base plasma-desktop installed, anyway) and quick-installing requirement of the krunner plasmoid quickscript, not worth attempting to bypass.

But accountsservice package.provided very nicely and took all the polkit junk with it when it left. =:^)

So now I just have to create more permanent hacks/patches to kill the baloo requirements of plasma-workspace and plasma-desktop, but that's another day's work, after which I won't actually need baloo any more, and will thus have to decide whether to git-bisect it anyway, to get it fixed and eliminate the chance of it triggering on something else, or be lazy and close the bug OBSOLETE or the like.




Comment 13


Johannes Huber (RETIRED)






          2016-03-11 13:46:46 UTC
        

Cant reproduce this myself. No other user in cc indicates that this is a local problem, which maybe introduced through those CFLAGS.









Format For Printing
 - XML
 - Clone This Bug
 - Clone In The Same 
                        Product
 - Top of page 







Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]

