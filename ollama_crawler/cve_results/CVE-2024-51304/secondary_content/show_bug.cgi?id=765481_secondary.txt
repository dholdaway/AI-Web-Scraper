Title: 765481 – net-dns/djbdns-1.05-r33 failing on setgid
URL: https://bugs.gentoo.org/show_bug.cgi?id=765481

Go to: 
		Gentoo Home
Documentation
Forums
Lists
Bugs
Planet
Store
Wiki
Get Gentoo!





Gentoo's Bugzilla – Bug 765481
net-dns/djbdns-1.05-r33 failing on setgid
Last modified: 2021-01-30 15:02:13 UTC node [vulture]


Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]













Bug 765481 
      - net-dns/djbdns-1.05-r33 failing on setgid


Summary:
net-dns/djbdns-1.05-r33 failing on setgid
    








Status:
    

RESOLVED
          WORKSFORME
      






Alias:


        None
    





Product:

Gentoo Linux




Classification:

Unclassified




Component:

Current packages

  (show other bugs)



Hardware:

All
        Linux
      







Importance:
      
Normal
       normal
      


Assignee:

Michael Orlitzky








URL:







Whiteboard:




Keywords:








Depends on:







Blocks:









 





      Reported:
    
2021-01-14 21:44 UTC by Andrew Ray





      Modified:
    
2021-01-30 15:02 UTC
      (History)
    




          CC List:
        

1 
          user
          
            (show)
          



ionen









See Also:






Package list:







Runtime testing required:

---























      Attachments
    



Add an attachment
        (proposed patch, testcase, etc.)
    








Note
              You need to
              log in
              before you can comment on or make changes to this bug.
            

















Description


Andrew Ray





          2021-01-14 21:44:29 UTC
        

I'm not sure the cause, but after a system upgrade, DJBDNS / tinydns started giving me the error: "tinydns: fatal: unable to setgid: invalid argument" and obviously not starting.

I dug through the source code to find what was causing the error, and it is something to do with testing for "shortsetgroups" when it is built, which I guess that test is failing, because I also noticed a warning message on building:

prot.c: In function ‘prot_gid’:
prot.c:13:19: warning: passing argument 2 of ‘setgroups’ from incompatible pointer type [-Wincompatible-pointer-types]
   13 |   if (setgroups(1,x) == -1) return -1;
      |                   ^
      |                   |
      |                   short int *
In file included from prot.c:6:
/usr/include/grp.h:176:50: note: expected ‘const __gid_t *’ {aka ‘const unsigned int *’} but argument is of type ‘short int *’
  176 | extern int setgroups (size_t __n, const __gid_t *__groups) __THROW;
      |                                   ~~~~~~~~~~~~~~~^~~~~~~~

My quick and dirty solution was to change the source code in prot.c to comment out the code that is triggered by this "shortsetgroups" test:

int prot_gid(int gid)
{
//#ifdef HASSHORTSETGROUPS
//  short x[2];
//  x[0] = gid; x[1] = 73; /* catch errors */
//  if (setgroups(1,x) == -1) return -1;
//#else
  if (setgroups(1,&gid) == -1) return -1;
//#endif
  return setgid(gid); /* _should_ be redundant, but on some systems it isn't */
}

I notice there is a project https://github.com/pjps/ndjbdns which modified DJBDNS to work with the normal init system, and they have changed hasshsgr.h to never set HASSHORTSETGROUPS.

I don't get why shorts instead of normal ints would sometimes be used, presume it has to do with some really old system, and who knows if anyone is still using DJBDNS other than me, but just wanted to put this out here, because I haven't seen the error reported anywhere else.




Comment 1


Michael Orlitzky






          2021-01-15 12:36:04 UTC
        

Hm.. the build test seems to be,

  choose clr tryshsgr hasshsgr.h1 hasshsgr.h2 > hasshsgr.h

which I think builds and runs the "tryshsgr" program and echoes either "hasshsgr.h1" or "hasshsgr.h2" into "hasshsgr.h" depending on whether or not tryshsgr ran successfully.

Does it succeed on your machine? (Which libc are you using?)




Comment 2


Andrew Ray





          2021-01-15 16:05:00 UTC
        

(In reply to Michael Orlitzky from comment #1)
> Hm.. the build test seems to be,
> 
>   choose clr tryshsgr hasshsgr.h1 hasshsgr.h2 > hasshsgr.h
> 
> which I think builds and runs the "tryshsgr" program and echoes either
> "hasshsgr.h1" or "hasshsgr.h2" into "hasshsgr.h" depending on whether or not
> tryshsgr ran successfully.
> 
> Does it succeed on your machine? (Which libc are you using?)

The build succeeds,glibc 2.32-r5, but it chooses the header that sets HASSHORTSETGROUPS. Which then fails when it runs. Manually modifying the code (e.g. commenting out) to force the other option makes it work, and avoids that compile time warning.

I wonder if it is some fix for some problem with libc from 20 years ago that has stopped being a problem?

Probably my best route is to eventually migrate to Bind, since I suppose there are some arguments against using practically abandoned software.




Comment 3


Michael Orlitzky






          2021-01-16 02:29:52 UTC
        

There are still people keeping djbdns alive, for tinydns anyway.

But what I'm curious about is how the test for "shortsetgroups" succeeds on your system (leading to the incorrect header being chosen). The code for the test is in tryshsgr.c:

  int main()
  {
    short x[4];
 
    x[0] = x[1] = 1;
    if (getgroups(1,x) == 0) if (setgroups(1,x) == -1) _exit(1);

    if (getgroups(1,x) == -1) _exit(1);
    if (x[1] != 1) _exit(1);
    x[1] = 2;
    if (getgroups(1,x) == -1) _exit(1);
    if (x[1] != 2) _exit(1);
    _exit(0);
  }

I think it's setting specific values (1, 2) in the array "x", and then looking to see if they get overwritten by the call to getgroups(), which will only populate x[0] if the size of a gid is "short", but should populate (at least) x[1] as well when a gid is bigger than a short.

For the incorrect header to be chosen, this program has to make it all the way to the final "_exit(0);". It does fail on my machine, but that doesn't mean I don't believe you... the test is probably subtly broken.




Comment 4


Ionen Wolkens






          2021-01-16 04:17:44 UTC
        

I'm no expert and no idea how to reach _exit(0) but...

"The argument size should be set to the maximum number of items
 that can be stored in the buffer pointed to by list" from getgroups(2)

getgroups(1,x) will fail (-1) if user has more than 1 group (e.g has supplementary groups), given max requested size of 1.

If none, then getgroups(1,x) sets x[0] to the first group (for portage that'd be portage's gid, usually no other group).

Then what about x[1] outside size's range? This was set to 1 so it should stay 1.

However surprise, x[1] is now == 0?




Comment 5


Ionen Wolkens






          2021-01-16 04:26:57 UTC
        

Hm, can't replicate if using int instead of short, but seems odd considering the gid isn't high.




Comment 6


Ionen Wolkens






          2021-01-16 05:44:57 UTC
        

(In reply to Ionen Wolkens from comment #5)
> Hm, can't replicate if using int instead of short, but seems odd considering
> the gid isn't high.
Well, I guess the kernel just memcpy the whole int over the short so being low/high is not relevant.. is there some security feature that would prevent this from happening in the kernel? It'd reach _exit(0) then, but I don't enable many of those myself.

This test looks bogus for many reasons anyhow.




Comment 7


Andrew Ray





          2021-01-23 10:55:25 UTC
        

I've noticed that it randomly crashes, there were actually other warnings when I was compiling. I also discovered that PowerDNS has a backend that will use the tinydns database file, so that's the route I'm going (not wanting to learn how to write Zone files at the moment). A couple of lines in the config file, and PowerDNS is now working. 
It's been a good run with DJBDNS -- since I was in highschool, so before 2005, for a long time I also used qmail, but all good things must come to an end. ;-)




Comment 8


Michael Orlitzky






          2021-01-30 15:02:13 UTC
        

Ok, no problem. I'm going to resolve this "WORKSFORME" since I can't reproduce it myself. I believe that there's a problem... but you probably don't want to waste a bunch of time investigating if you're switching to PowerDNS. Correct me if I'm wrong =)









Format For Printing
 - XML
 - Clone This Bug
 - Clone In The Same 
                        Product
 - Top of page 







Home
| New–[Ex]
| Browse
| Search
| Privacy Policy

| 





[?]
| Reports

| 
Requests

| 
Help


| 
New Account


| 
Log In





[x]



| 
Forgot Password

Login:




[x]

