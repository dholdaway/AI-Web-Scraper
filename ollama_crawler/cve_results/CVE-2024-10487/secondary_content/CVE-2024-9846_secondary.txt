Title: CVE-2024-9846 - The The Enable Shortcodes inside Widgets,Comments and Experts plugin for WordPress is vulnerable to  - CVE-Search
URL: https://cve.circl.lu/cve/CVE-2024-9846

Recent CVE
Browse CVE per vendor
Browse CWEs











About
















CVE-Search
CVE-2024-9846





ID

          CVE-2024-9846
          
        


Summary
The The Enable Shortcodes inside Widgets,Comments and Experts plugin for WordPress is vulnerable to arbitrary shortcode execution in all versions up to, and including, 1.0.0. This is due to the software allowing users to execute an action that does not properly validate a value before running do_shortcode. This makes it possible for unauthenticated attackers to execute arbitrary shortcodes.


References



 https://www.wordfence.com/threat-intel/vulnerabilities/id/f1ac2544-f96b-4859-96de-795753a94264?source=cve 
 https://plugins.trac.wordpress.org/browser/enable-shortcodes-inside-widgetscomments-and-experts/trunk/enable-shortcodes-inside-widgets-comments-experts.php#L19 
 https://wordpress.org/plugins/enable-shortcodes-inside-widgetscomments-and-experts/#developers 





Vulnerable Configurations








CVSS


Base:          None 
Impact:        
Exploitability:




CWE
CWE-94


CAPEC





 Code Injection 
 An adversary exploits a weakness in input validation on the target to inject new code into that which is currently executing. This differs from code inclusion in that code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application. 



 Leverage Executable Code in Non-Executable Files 
 An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high. 



 Manipulating User-Controlled Variables 
 This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An attacker can override environment variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the attacker can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables. 






Access


VectorComplexityAuthentication









Impact


ConfidentialityIntegrityAvailability









Last major update
30-10-2024 - 03:15


Published
30-10-2024 - 03:15


Last modified
30-10-2024 - 03:15




Back to Top

