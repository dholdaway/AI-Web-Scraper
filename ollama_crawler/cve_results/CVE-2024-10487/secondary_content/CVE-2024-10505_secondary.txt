Title: CVE-2024-10505 - A vulnerability was found in wuzhicms 4.1.0. It has been classified as critical. Affected is the fun - CVE-Search
URL: https://cve.circl.lu/cve/CVE-2024-10505

Recent CVE
Browse CVE per vendor
Browse CWEs











About
















CVE-Search
CVE-2024-10505





ID

          CVE-2024-10505
          
        


Summary
A vulnerability was found in wuzhicms 4.1.0. It has been classified as critical. Affected is the function add/edit of the file www/coreframe/app/content/admin/block.php. The manipulation leads to code injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Initially two separate issues were created by the researcher for the different function calls. The vendor was contacted early about this disclosure but did not respond in any way.


References



 https://vuldb.com/?id.282444 
 https://vuldb.com/?ctiid.282444 
 https://vuldb.com/?submit.427401 
 https://github.com/wuzhicms/wuzhicms/issues/209 





Vulnerable Configurations








CVSS


Base:          None 
Impact:        
Exploitability:




CWE
CWE-94


CAPEC





 Code Injection 
 An adversary exploits a weakness in input validation on the target to inject new code into that which is currently executing. This differs from code inclusion in that code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application. 



 Leverage Executable Code in Non-Executable Files 
 An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high. 



 Manipulating User-Controlled Variables 
 This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An attacker can override environment variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the attacker can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables. 






Access


VectorComplexityAuthentication









Impact


ConfidentialityIntegrityAvailability









Last major update
30-10-2024 - 02:15


Published
30-10-2024 - 02:15


Last modified
30-10-2024 - 02:15




Back to Top

